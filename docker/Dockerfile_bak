FROM nvidia/cuda:9.2-cudnn7-devel-ubuntu16.04

RUN apt-get update && apt-get install -y rsync htop git openssh-server

RUN apt-get install python3-pip -y
RUN ln -s /usr/bin/python3 /usr/bin/python
RUN pip3 install --upgrade pip

#Torch and dependencies:
# RUN pip install http://download.pytorch.org/whl/cu80/torch-0.4.0-cp35-cp35m-linux_x86_64.whl 
RUN pip install torch==1.3.1+cu92 torchvision==0.4.2+cu92 -f https://download.pytorch.org/whl/torch_stable.html
RUN pip install cffi tensorboardX
RUN pip install tqdm scipy scikit-image colorama==0.3.7 
RUN pip install setproctitle pytz ipython

#vid2vid dependencies
RUN apt-get install libglib2.0-0 libsm6 libxrender1 -y
RUN pip install dominate requests opencv-python 

#python IDE depedencies
# RUN apt-get -y install libjs-jquery \
#     libjs-mathjax \
#     python3-pyqt4 \
#     tortoisehg \
#     gitk \
#     ipython3-qtconsole \
#     python3-pep8 \
#     pyflakes \
#     pylint \
#     python3-jedi \
#     python3-psutil \
#     python3-sphinx
RUN pip install jupyter PyQt5
RUN apt update -y
# RUN apt install -y mysql-server mysql-client
RUN export TERM=xterm && apt-get install -y spyder3
RUN pip install spyder

# Avoid warnings by switching to noninteractive
ENV DEBIAN_FRONTEND=noninteractive

# Or your actual UID, GID on Linux if not the default 1000
ARG USERNAME=ola
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Configure apt and install packages
RUN apt-get -y install git procps lsb-release
    # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed
    #
    # Install pylint
# RUN pip --disable-pip-version-check --no-cache-dir install pylint
    #
    # Create a non-root user to use if preferred - see https://aka.ms/vscode-remote/containers/non-root-user.
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
    # [Optional] Add sudo support for non-root user
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME \
    #
    # Clean up
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*

RUN apt install -y pylint
# RUN ln -s /usr/bin/pylint /usr/local/bin/pylint
# Switch back to dialog for any ad-hoc use of apt-get

RUN pip install seaborn

ENV DEBIAN_FRONTEND=

EXPOSE 8886
WORKDIR /src
CMD jupyter notebook --port=8886 --ip=0.0.0.0 --no-browser --allow-root --NotebookApp.token=''
